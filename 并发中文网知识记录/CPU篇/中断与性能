时间：2020/9/24
注：文章来此并发编程网
文章地址：http://ifeve.com/interrupt-and-performance/#more-11691

中断与性能
    中断，会导致正在运行的CPU要停下手头的工作去响应，这需要工作任务的切换，就带来了我们熟知的上下文切换，而频繁上下文切换，是对系统性能的重要影响因素。

    如何减少中断带来的影响呢？
        现在的CPU往往是多核，如16，32核，是否可以把中断绑定到其中一个CPU上，再把其他剩余的CPU用于应用计算。
        因为之前是单核的原因，传统的很多做法是会把中断扔给cpu0处理，在linux下，可执行 名片stat-PALL1，查看各个CPU上的中断情况。

    为了能充分利用多核，Google的牛人搞了个RPS、RFS的patch，能够将网卡中断分散到多个CPU，主要就是hash到固定的CPU上，具体可google查看。


时间：2020/9/24
注：文章来此并发编程网
文章地址：http://ifeve.com/what-is-context-switching/#more-3444
什么是上下文切换：
     支持多任务处理是CPU设计史最大的跨越之一。在计算机中，多任务处理是指同时运行两个或多个程序。
     从使用者的角度来看，这看起来并不复杂或者难以实现，但是它确实是计算机设计史上一次大的飞跃。
     在多任务处理系统中，CPU需要处理所有程序的操作，当用户来回切换它们时，需要记录这些程序执行到哪里。上下文切换就是这样一个过程，它允许CPU记录并恢复各种正在运行程序的状态，使他能够完成切换操作。

     在上下文切换过程中，CPU会停止处理当前运行的程序，并保存当前程序运行的具体位置一边之后继续运行。



