时间：2020/9/24
注：文章来此并发编程网
文章地址：http://ifeve.com/java-io/

Java IO 教程
    是一套Java用来读写数据（输入和输出）的API。大部分程序都要处理一些输入，并由输入产生一些输出。Java为此提供了java.io包。

    Java.io 包的范围

        java.io 包并没有包含所有输入输出类型。例如，并不包含GUI或者网页上的输入输出，这些输入和输出在其他地方都涉及，比如Swing工程中的JFC（Java Foundation Classes）类，
        或者J2EE里的Servlet和HTTP包。
        Java.io 包主要涉及文件，网络数据流，内存缓冲等的输入输出。

     Java IO 概述
        输入和输出 - 数据源和目标媒介
        术语“输入”和“输出”有时候会有一点让人疑惑。一个应用程序的输入往往是另一个应用程序的输出。
        那么OutputStream流到底是一个输出到目的地的流呢？还是一个产生输出的流？
        InputStream流到底会不会输出它的数据给读取数据的程序呢？（输入流可以理解为像内存输入，输出流可以理解为从内存输出）
        Java的IO包主要关注的是从原始数据源的读取以及输出原始数据到目标媒介。
      目标媒介：
        文件
        管道
        网络连接
        内存缓存
        System.in, System.out, System.error(注：Java标准输入、输出、错误输出)

        一个程序从数据源读取数据，然后将数据输出到其他媒介的原理：
        Source--->Program--->Destination

     流
         在Java IO中，流是一个核心的概念。流从概念上来说是一个连续的数据流。
         你既可以从流中读取数据，也可以向流中写数据。流与数据源或者数据流向的媒介相关联。
         在Java IO中流既可以是字节流（以字节为单位进行读写），也可以是字符流（以字符为单位进行读写）。
     类InputStream，OutputStream，Reader 和Writer
        一个程序需要InputStream或者或者Reader从数据源帐读取数据，需要OutputStream或者Writer将数据写入到目标媒介中。
        Source--->InputStream/Reader ---> Program
        Source--->OutputStream/Writer ---> Destination
        InputStream和Reader与数据源相关联，OutputStream和Writer与目标媒介相关联。
    Java IO 的用途和特征
        Java IO中包含了许多InputStream、OutputStream、Reader、Writer的子类。
        这样设计的原因是让每一个类都负责不同的功能。这也就是为什么IO包中有这么多不同的类的缘故。
        各类用途汇总如下：
            文件访问
            网络访问
            内存缓存访问
            线程内部通信（管道）
            缓冲
            过滤
            解析
            读写文本（Readers/Writers）
            读写基本数据类型（long,int etc.）
            读写对象
        当通读过Java IO 类的源代码之后，我们很容易就能了解这些用途。这些用途或多或少让我们恩加容易的理解，不同的类用于针对不同业务场景。
    插图地址：
    http://ifeve.com/wp-content/uploads/2014/10/QQ%E6%88%AA%E5%9B%BE20141020174145.png